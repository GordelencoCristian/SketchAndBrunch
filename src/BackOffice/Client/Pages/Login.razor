@page "/login"
@using SharedData.Models
@using BackOffice.Client.Services.Implementation
@layout LoginLayout
@inject NavigationManager navigationManager
@inject IdentityAuthenticationStateProvider authStateProvider

<PageTitle>Login</PageTitle>

<div style="position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            display: flex;
            flex-direction: column;
            width: 500px;"
>
    <div
        style="padding: 0.5rem 1rem;"
    >
        <h5 class="text-center">Login</h5>
    </div>
    <div
        Elevation="4"
        Style="padding: 1rem 1rem; @($"color: white; background:{Colors.Purple.Lighten1};")"
    >
        <EditForm class="form-signin" OnValidSubmit="OnSubmit" Model="loginParameters">
        <DataAnnotationsValidator />

            <div class="form-floating mb-3">
                <InputText id="inputUsername" class="form-control" @bind-Value="loginParameters.UserName" autofocus placeholder="Username" />
                <label for="inputUsername" style="color: grey">User Name</label>
                <ValidationMessage For="@(() => loginParameters.UserName)" />
            </div>

            <div class="form-floating mb-3">
                <InputText type="password" id="inputPassword" class="form-control" placeholder="Password" Style="@($"color:{Colors.Grey.Lighten1};")" @bind-Value="loginParameters.Password" />
                <label for="inputPassword" style="color: grey">Password</label>
                <ValidationMessage For="@(() => loginParameters.Password)" />
            </div>

            <div class="form-group mb-3">
                <div class="form-check">
                    <InputCheckbox id="inputRememberMe" class="form-check-input" @bind-Value="@loginParameters.RememberMe" />
                    <label class="form-check-label" for="inputRememberMe">Remember me</label>
                </div>
            </div>

            <div class="d-grid gap-2">
                <button class="btn btn-lg btn-block btn-primary" style="color: white;" type="submit">Sign in</button>
            </div>

            <label class="text-danger">@error</label>

            <NavLink href="register">
                <h6 class="text-center" style="color: white;">Create account</h6>
            </NavLink>
        </EditForm>
    </div>
</div>

@code {
    LoginParameters loginParameters { get; set; } = new LoginParameters();
    string error { get; set; }

    async Task OnSubmit()
    {
        error = null;
        try
        {
            await authStateProvider.Login(loginParameters);
            navigationManager.NavigateTo("");
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
    }
}

