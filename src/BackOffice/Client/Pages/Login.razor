@page "/login"
@using SharedData.Models
@using BackOffice.Client.Services.Implementation
@layout LoginLayout
@inject NavigationManager navigationManager
@inject IdentityAuthenticationStateProvider authStateProvider

<PageTitle>Login</PageTitle>

<div class="box"
>
    <div id="container"><div class="dot"></div></div>
    
    <div
        Style="padding: 1rem 1rem; border-radius: 5px; @($"color: white; background:{Colors.Shades.Black};")"
    >
        <EditForm class="form-signin" OnValidSubmit="OnSubmit" Model="loginParameters">
        <DataAnnotationsValidator />

            <div class="form-floating mb-3" style="margin-top: 20px;">
                <InputText id="inputUsername" class="input" @bind-Value="loginParameters.UserName" autofocus placeholder="Username" />
                <label for="inputUsername" style="color: grey">Username</label>
                <ValidationMessage For="@(() => loginParameters.UserName)" />
            </div>

            <div class="form-floating mb-3" style="margin-top: 20px;">
                <InputText type="password" id="inputPassword" class="input" placeholder="Password" Style="@($"color:{Colors.Grey.Lighten1};")" @bind-Value="loginParameters.Password" />
                <label for="inputPassword" style="color: grey">Password</label>

                <ValidationMessage For="@(() => loginParameters.Password)" />
            </div>

            <div class="form-group mb-3">
                <div class="form-check">
                    <InputCheckbox id="inputRememberMe" class="form-check-input" @bind-Value="@loginParameters.RememberMe" />
                    <label class="form-check-label" for="inputRememberMe" style="margin-top: 5px;">Remember me</label>
                </div>
            </div>

            <div>
                <button class="button-6" type="submit">Sign in</button>
            </div>

            <label class="text-danger">@error</label>

            <NavLink href="register">
                <h6 class="text-center" style="color: white;">Create account</h6>
            </NavLink>
        </EditForm>
    </div>
</div>

@code {
    LoginParameters loginParameters { get; set; } = new LoginParameters();
    string error { get; set; }

    async Task OnSubmit()
    {
        error = null;
        try
        {
            await authStateProvider.Login(loginParameters);
            navigationManager.NavigateTo("");
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
    }
}

